{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e8788c5b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n",
      "True\n",
      "False\n",
      "False\n",
      "False\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "def is_balanced(delimiters):\n",
    "    stack = []\n",
    "    opening = \"({[\"\n",
    "    closing = \")}]\"\n",
    "    for char in delimiters:\n",
    "        if char in opening:\n",
    "            stack.append(char)\n",
    "        elif char in closing:\n",
    "            if not stack:\n",
    "                return False\n",
    "            if opening.index(stack[-1]) == closing.index(char):\n",
    "                stack.pop()\n",
    "            else:\n",
    "                return False\n",
    "    return not stack\n",
    "\n",
    "# Test the function\n",
    "print(is_balanced(\"()[]{}\"))  # True\n",
    "print(is_balanced(\"([{}])\"))  # True\n",
    "print(is_balanced(\"([]{})\"))  # True\n",
    "print(is_balanced(\"([)]\"))  # False\n",
    "print(is_balanced(\"([{}]\"))  # False\n",
    "print(is_balanced(\"[]{}]\"))  # False\n",
    "print(is_balanced(\"([})\"))  # False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d69a36a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
